[{"E:\\chat-app\\public\\src\\index.js":"1","E:\\chat-app\\public\\src\\App.js":"2","E:\\chat-app\\public\\src\\pages\\Register.js":"3","E:\\chat-app\\public\\src\\pages\\Chat.jsx":"4","E:\\chat-app\\public\\src\\pages\\Login.jsx":"5","E:\\chat-app\\public\\src\\utils\\APIRoutes.js":"6","E:\\chat-app\\public\\src\\pages\\SetAvatar.jsx":"7","E:\\chat-app\\public\\src\\components\\Contacts.js":"8","E:\\chat-app\\public\\src\\components\\Welcome.jsx":"9","E:\\chat-app\\public\\src\\components\\ChatContainer.jsx":"10","E:\\chat-app\\public\\src\\components\\Logout.js":"11","E:\\chat-app\\public\\src\\components\\Chatinput.jsx":"12","E:\\chat-app\\public\\src\\components\\Messages.jsx":"13","E:\\chat-app\\public\\src\\components\\ChatInput.jsx":"14"},{"size":262,"mtime":1651478378909,"results":"15","hashOfConfig":"16"},{"size":655,"mtime":1651577678962,"results":"17","hashOfConfig":"16"},{"size":5891,"mtime":1651563082772,"results":"18","hashOfConfig":"16"},{"size":3216,"mtime":1651725512384,"results":"19","hashOfConfig":"16"},{"size":4902,"mtime":1651724636004,"results":"20","hashOfConfig":"16"},{"size":464,"mtime":1651677150851,"results":"21","hashOfConfig":"16"},{"size":5244,"mtime":1651593897836,"results":"22","hashOfConfig":"16"},{"size":5102,"mtime":1651670769080,"results":"23","hashOfConfig":"16"},{"size":739,"mtime":1651636024140,"results":"24","hashOfConfig":"16"},{"size":5655,"mtime":1651718223034,"results":"25","hashOfConfig":"16"},{"size":842,"mtime":1651637020748,"results":"26","hashOfConfig":"16"},{"size":4446,"mtime":1651717861008,"results":"27","hashOfConfig":"16"},{"size":200,"mtime":1651638158129,"results":"28","hashOfConfig":"16"},{"size":4446,"mtime":1651717861008,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1f4jfy4",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"33"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"33"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\chat-app\\public\\src\\index.js",[],[],[],"E:\\chat-app\\public\\src\\App.js",[],[],"E:\\chat-app\\public\\src\\pages\\Register.js",["78","79","80"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Logo from \"../assets/logo.svg\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport { registerRoute } from \"../utils/APIRoutes\";\r\nfunction Register() {\r\n    const navigate = useNavigate();\r\n    const [values, setValues] = useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (handleValidation()) {\r\n            const { password, confirmPassword, username, email } = values;\r\n            const { data } = await axios.post(registerRoute, {\r\n                username,\r\n                email,\r\n                password,\r\n            });\r\n            if (data.status === false) {\r\n                toast.error(data.mag, toastOptions);\r\n            }\r\n            if (data.status === true) {\r\n                localStorage.setItem(\r\n                    \"chat-app-user\",\r\n                    JSON.stringify(data.user)\r\n                );\r\n                navigate(\"/\");\r\n            }\r\n        }\r\n    };\r\n    const toastOptions = {\r\n        position: \"bottom-right\",\r\n        autoClose: 8000,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        theme: \"dark\",\r\n    };\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"chat-app-user\")) {\r\n            navigate(\"/\");\r\n        }\r\n    }, []);\r\n    const handleValidation = () => {\r\n        const { password, confirmPassword, username, email } = values;\r\n        if (password !== confirmPassword) {\r\n            toast.error(\r\n                \"password and confirm password should be same.\",\r\n                toastOptions\r\n            );\r\n            return false;\r\n        } else if (username.length < 3) {\r\n            toast.error(\r\n                \"Username should be greater than 3 character.\",\r\n                toastOptions\r\n            );\r\n        } else if (password.length < 8) {\r\n            toast.error(\r\n                \"Password should be equal or greater than 8 characters.\",\r\n                toastOptions\r\n            );\r\n            return false;\r\n        } else if (email === \"\") {\r\n            toast.error(\"Email is required\", toastOptions);\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    const handleChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value });\r\n    };\r\n    return (\r\n        <>\r\n            <FormContainer>\r\n                <form onSubmit={(e) => handleSubmit(e)}>\r\n                    <div className=\"brand\">\r\n                        <img src={Logo} alt=\"Logo\" />\r\n                        <h1>snappy</h1>\r\n                    </div>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={(e) => handleChange(e)}\r\n                    />\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        onChange={(e) => handleChange(e)}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        onChange={(e) => handleChange(e)}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        name=\"confirmPassword\"\r\n                        onChange={(e) => handleChange(e)}\r\n                    />\r\n                    <button type=\"submit\">Create User</button>\r\n                    <span>\r\n                        already have an account ? <Link to=\"/login\">Login</Link>\r\n                    </span>\r\n                </form>\r\n            </FormContainer>\r\n            <ToastContainer />\r\n        </>\r\n    );\r\n}\r\n\r\nconst FormContainer = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    gap: 1rem;\r\n    align-items: center;\r\n    background-color: #131324;\r\n    .brand {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 1rem;\r\n        justify-content: center;\r\n    }\r\n    img {\r\n        height: 5rem;\r\n    }\r\n    h1 {\r\n        color: white;\r\n        text-transform: uppercase;\r\n    }\r\n    form {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 2rem;\r\n        background-color: #00000076;\r\n        border-radius: 2rem;\r\n        padding: 3rem 5rem;\r\n        input {\r\n            background-color: transparent;\r\n            padding: 1rem;\r\n            border: 0.1rem solid #4e0eff;\r\n            border-radius: 0.4rem;\r\n            color: white;\r\n            width: 100%;\r\n            font-size: 1rem;\r\n            &:focus {\r\n                border: 0.1rem solid #997af0;\r\n                outline: none;\r\n            }\r\n        }\r\n        button {\r\n            background-color: #997af0;\r\n            color: white;\r\n            padding: 1rem 2rem;\r\n            border: none;\r\n            font-weight: bold;\r\n            cursor: pointer;\r\n            border-radius: 0.4rem;\r\n            text-transform: uppercase;\r\n            transition: 0.5s ease-in-out;\r\n            &:hover {\r\n                background-color: #4e0eff;\r\n            }\r\n        }\r\n\r\n        span {\r\n            color: white;\r\n            text-transform: uppercase;\r\n            a {\r\n                color: #4e0eff;\r\n                text-direction: none;\r\n                font-weight: bold;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Register;\r\n","E:\\chat-app\\public\\src\\pages\\Chat.jsx",["81","82"],[],"E:\\chat-app\\public\\src\\pages\\Login.jsx",["83","84"],[],"E:\\chat-app\\public\\src\\utils\\APIRoutes.js",[],[],[],"E:\\chat-app\\public\\src\\pages\\SetAvatar.jsx",["85"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport loader from \"../assets/loader.gif\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport { setAvatarRoute } from \"../utils/APIRoutes\";\r\nimport { Buffer } from \"buffer\";\r\nexport default function SetAvatar() {\r\n    const api = `https://api.multiavatar.com/4645646`;\r\n    const navigate = useNavigate();\r\n    const [avatars, setAvatars] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [selectedAvatar, setSelectedAvatar] = useState(undefined);\r\n    const toastOptions = {\r\n        position: \"bottom-right\",\r\n        autoClose: 8000,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        theme: \"dark\",\r\n    };\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"chat-app-user\")) {\r\n            navigate(\"/login\");\r\n        }\r\n    });\r\n    const setProfilePicture = async () => {\r\n        if (selectedAvatar === undefined) {\r\n            toast.error(\"Please select an avatar\", toastOptions);\r\n        } else {\r\n            const user = await JSON.parse(\r\n                localStorage.getItem(\"chat-app-user\")\r\n            );\r\n            const { data } = await axios.post(`${setAvatarRoute}/${user._id}`, {\r\n                image: avatars[selectedAvatar],\r\n            });\r\n\r\n            if (data.isSet) {\r\n                user.isAvatarImageSet = true;\r\n                user.avatarImage = data.image;\r\n                localStorage.setItem(\"chat-app-user\", JSON.stringify(user));\r\n                navigate(\"/\");\r\n            } else {\r\n                toast.error(\r\n                    \"Error setting avatar, Please try again\",\r\n                    toastOptions\r\n                );\r\n            }\r\n        }\r\n    };\r\n    const ProfileImage = async () => {\r\n        const data = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            const image = await axios.get(\r\n                `${api}/${Math.round(Math.random() * 1000)}`\r\n            );\r\n            const buffer = new Buffer(image.data);\r\n            data.push(buffer.toString(\"base64\"));\r\n        }\r\n        setAvatars(data);\r\n        setIsLoading(false);\r\n    };\r\n    useEffect(() => {\r\n        ProfileImage();\r\n    }, []);\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <Container>\r\n                    <img src={loader} alt=\"loader\" className=\"loader\" />\r\n                </Container>\r\n            ) : (\r\n                <Container>\r\n                    <div className=\"title-container\">\r\n                        <h1>Pick an avatar as your profile picture</h1>\r\n                    </div>\r\n                    <div className=\"avatars\">\r\n                        {avatars.map((avatar, index) => {\r\n                            return (\r\n                                <div\r\n                                    className={`avatar ${\r\n                                        selectedAvatar === index\r\n                                            ? \"selected\"\r\n                                            : \"\"\r\n                                    }`}\r\n                                >\r\n                                    <img\r\n                                        src={`data:image/svg+xml;base64,${avatar}`}\r\n                                        alt=\"avatar\"\r\n                                        key={avatar}\r\n                                        onClick={() => setSelectedAvatar(index)}\r\n                                    />\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <button className=\"submit-btn\" onClick={setProfilePicture}>\r\n                        Set as Profile Picture\r\n                    </button>\r\n                </Container>\r\n            )}\r\n            ;\r\n            <ToastContainer />\r\n        </>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    gap: 3rem;\r\n    background-color: #131324;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    .loader {\r\n        max-inline-size: 100%none;\r\n    }\r\n\r\n    .title-container {\r\n        h1 {\r\n            color: white;\r\n        }\r\n    }\r\n    .avatars {\r\n        display: flex;\r\n        gap: 2rem;\r\n        .avatar {\r\n            border: 0.4rem solid transparent;\r\n            padding: 0.4rem;\r\n            border-radius: 5rem;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            transition: 0.5s ease-in-out;\r\n            img {\r\n                height: 6rem;\r\n            }\r\n        }\r\n        .selected {\r\n            border: 0.4rem solid #4e0eff;\r\n        }\r\n    }\r\n    .submit-btn {\r\n        background-color: #997af0;\r\n        color: white;\r\n        padding: 1rem 2rem;\r\n        border: none;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n        border-radius: 0.4rem;\r\n        text-transform: uppercase;\r\n        transition: 0.5s ease-in-out;\r\n        &:hover {\r\n            background-color: #4e0eff;\r\n        }\r\n    }\r\n`;\r\n","E:\\chat-app\\public\\src\\components\\Contacts.js",[],[],"E:\\chat-app\\public\\src\\components\\Welcome.jsx",[],[],"E:\\chat-app\\public\\src\\components\\ChatContainer.jsx",["86","87"],[],"E:\\chat-app\\public\\src\\components\\Logout.js",["88","89"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { BiPowerOff } from \"react-icons/bi\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { logoutRoute } from \"../utils/APIRoutes\";\r\nexport default function Logout() {\r\n    const navigate = useNavigate();\r\n    const handleClick = async () => {\r\n        localStorage.clear();\r\n        navigate(\"/login\");\r\n    };\r\n    return (\r\n        <Button onClick={handleClick}>\r\n            <BiPowerOff />\r\n        </Button>\r\n    );\r\n}\r\n\r\nconst Button = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0.5rem;\r\n    border-radius: 0.5rem;\r\n    background-color: #9a86f3;\r\n    border: none;\r\n    cursor: pointer;\r\n    svg {\r\n        font-size: 1.3rem;\r\n        color: #ebe7ff;\r\n    }\r\n`;\r\n","E:\\chat-app\\public\\src\\components\\Chatinput.jsx",[],[],"E:\\chat-app\\public\\src\\components\\Messages.jsx",["90"],[],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function Messages() {\r\n    return <div>Messages</div>;\r\n}\r\n\r\nconst Container = styled.div`\r\n    height: 80%;\r\n`;\r\n","E:\\chat-app\\public\\src\\components\\ChatInput.jsx",[],[],{"ruleId":"91","severity":1,"message":"92","line":2,"column":16,"nodeType":"93","messageId":"94","endLine":2,"endColumn":24},{"ruleId":"91","severity":1,"message":"95","line":20,"column":31,"nodeType":"93","messageId":"94","endLine":20,"endColumn":46},{"ruleId":"96","severity":1,"message":"97","line":49,"column":8,"nodeType":"98","endLine":49,"endColumn":10,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":29,"column":8,"nodeType":"98","endLine":29,"endColumn":10,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"102","line":52,"column":8,"nodeType":"98","endLine":52,"endColumn":21,"suggestions":"103"},{"ruleId":"91","severity":1,"message":"92","line":2,"column":16,"nodeType":"93","messageId":"94","endLine":2,"endColumn":24},{"ruleId":"96","severity":1,"message":"97","line":48,"column":8,"nodeType":"98","endLine":48,"endColumn":10,"suggestions":"104"},{"ruleId":"96","severity":1,"message":"105","line":66,"column":8,"nodeType":"98","endLine":66,"endColumn":10,"suggestions":"106"},{"ruleId":"96","severity":1,"message":"107","line":24,"column":8,"nodeType":"98","endLine":24,"endColumn":21,"suggestions":"108"},{"ruleId":"96","severity":1,"message":"109","line":50,"column":8,"nodeType":"98","endLine":50,"endColumn":10,"suggestions":"110"},{"ruleId":"91","severity":1,"message":"111","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":13},{"ruleId":"91","severity":1,"message":"112","line":6,"column":10,"nodeType":"93","messageId":"94","endLine":6,"endColumn":21},{"ruleId":"91","severity":1,"message":"113","line":8,"column":7,"nodeType":"93","messageId":"94","endLine":8,"endColumn":16},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'confirmPassword' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'GetCurrentUser'. Either include it or remove the dependency array.",["115"],"React Hook useEffect has a missing dependency: 'LoadingData'. Either include it or remove the dependency array.",["116"],["117"],"React Hook useEffect has a missing dependency: 'ProfileImage'. Either include it or remove the dependency array.",["118"],"React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.",["119"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["120"],"'axios' is defined but never used.","'logoutRoute' is defined but never used.","'Container' is assigned a value but never used.",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"121","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [navigate]",{"range":"134","text":"135"},"Update the dependencies array to be: [GetCurrentUser]",{"range":"136","text":"137"},"Update the dependencies array to be: [LoadingData, currentUser]",{"range":"138","text":"139"},{"range":"140","text":"135"},"Update the dependencies array to be: [ProfileImage]",{"range":"141","text":"142"},"Update the dependencies array to be: [currentChat, getMessages]",{"range":"143","text":"144"},"Update the dependencies array to be: [socket]",{"range":"145","text":"146"},[1596,1598],"[navigate]",[1119,1121],"[GetCurrentUser]",[1789,1802],"[LoadingData, currentUser]",[1527,1529],[2362,2364],"[ProfileImage]",[891,904],"[currentChat, getMessages]",[1629,1631],"[socket]"]