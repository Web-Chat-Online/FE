{"ast":null,"code":"var _jsxFileName = \"E:\\\\chat-app\\\\public\\\\src\\\\components\\\\Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Logo from \"../assets/logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Contacts(_ref) {\n  _s();\n\n  let {\n    contacts,\n    currentUser\n  } = _ref;\n  const [currentUserName, setCurrentUserName] = useState(undefined);\n  const [currentUserImage, setCurrentUserImage] = useState(undefined);\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n  useEffect(() => {\n    if (currentUser) {\n      setCurrentUserImage(currentUser.avatarImage);\n      setCurrentUserName(currentUser.username);\n    }\n  }, [currentUser]);\n\n  const changeCurrentChat = (index, contact) => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentUserImage && currentUserName && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brand\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"snappy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-user\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/svg+xml;base64,${currentUserImage}`,\n            alt: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: currentUserName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(Contacts, \"wTP9W2PvLtuLn6SrLcOO3R23lWI=\");\n\n_c = Contacts;\nconst Container = styled.div`\n    display: grid;\n    grid-template-rows: 10% 75% 15%;\n    overflow: hidden;\n    background-color: #080420;\n    .brand {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 1rem;\n        img {\n            height: 2rem;\n        }\n        h3 {\n            color: white;\n            text-transform: uppercase;\n        }\n    }\n\n    .contacts {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        overflow: auto;\n        gap: 0.8rem;\n        .contact {\n            background-color: #ffffff39;\n        }\n    }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Contacts\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useEffect","useState","styled","Logo","Contacts","contacts","currentUser","currentUserName","setCurrentUserName","undefined","currentUserImage","setCurrentUserImage","currentSelected","setCurrentSelected","avatarImage","username","changeCurrentChat","index","contact","Container","div"],"sources":["E:/chat-app/public/src/components/Contacts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Logo from \"../assets/logo.svg\";\r\nexport default function Contacts({ contacts, currentUser }) {\r\n    const [currentUserName, setCurrentUserName] = useState(undefined);\r\n    const [currentUserImage, setCurrentUserImage] = useState(undefined);\r\n    const [currentSelected, setCurrentSelected] = useState(undefined);\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            setCurrentUserImage(currentUser.avatarImage);\r\n            setCurrentUserName(currentUser.username);\r\n        }\r\n    }, [currentUser]);\r\n    const changeCurrentChat = (index, contact) => {};\r\n    return (\r\n        <>\r\n            {currentUserImage && currentUserName && (\r\n                <Container>\r\n                    <div className=\"brand\">\r\n                        <img src={Logo} alt=\"Logo\" />\r\n                        <h3>snappy</h3>\r\n                    </div>\r\n                    <div className=\"contacts\">\r\n                        {/* {contacts.map((contact, index) => {\r\n                            return (\r\n                                <div\r\n                                    key={contact._id}\r\n                                    className={`contact ${\r\n                                        index === currentSelected\r\n                                            ? \"selected\"\r\n                                            : \"\"\r\n                                    }`}\r\n                                    onClick={() =>\r\n                                        changeCurrentChat(index, contact)\r\n                                    }\r\n                                >\r\n                                    <div className=\"avatar\">\r\n                                        <img\r\n                                            src={`data:image/svg+xml;base64,${contact.avatarImage}`}\r\n                                            alt=\"\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"username\">\r\n                                        <h3>{contact.username}</h3>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })} */}\r\n                    </div>\r\n                    <div className=\"current-user\">\r\n                        <div className=\"avatar\">\r\n                            <img\r\n                                src={`data:image/svg+xml;base64,${currentUserImage}`}\r\n                                alt=\"avatar\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"username\">\r\n                            <h1>{currentUserName}</h1>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 10% 75% 15%;\r\n    overflow: hidden;\r\n    background-color: #080420;\r\n    .brand {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 1rem;\r\n        img {\r\n            height: 2rem;\r\n        }\r\n        h3 {\r\n            color: white;\r\n            text-transform: uppercase;\r\n        }\r\n    }\r\n\r\n    .contacts {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        overflow: auto;\r\n        gap: 0.8rem;\r\n        .contact {\r\n            background-color: #ffffff39;\r\n        }\r\n    }\r\n`;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AACA,eAAe,SAASC,QAAT,OAA6C;EAAA;;EAAA,IAA3B;IAAEC,QAAF;IAAYC;EAAZ,CAA2B;EACxD,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAACQ,SAAD,CAAtD;EACA,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAACQ,SAAD,CAAxD;EACA,MAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAACQ,SAAD,CAAtD;EACAT,SAAS,CAAC,MAAM;IACZ,IAAIM,WAAJ,EAAiB;MACbK,mBAAmB,CAACL,WAAW,CAACQ,WAAb,CAAnB;MACAN,kBAAkB,CAACF,WAAW,CAACS,QAAb,CAAlB;IACH;EACJ,CALQ,EAKN,CAACT,WAAD,CALM,CAAT;;EAMA,MAAMU,iBAAiB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB,CAAE,CAAhD;;EACA,oBACI;IAAA,UACKR,gBAAgB,IAAIH,eAApB,iBACG,QAAC,SAAD;MAAA,wBACI;QAAK,SAAS,EAAC,OAAf;QAAA,wBACI;UAAK,GAAG,EAAEJ,IAAV;UAAgB,GAAG,EAAC;QAApB;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QALJ,eAgCI;QAAK,SAAS,EAAC,cAAf;QAAA,wBACI;UAAK,SAAS,EAAC,QAAf;UAAA,uBACI;YACI,GAAG,EAAG,6BAA4BO,gBAAiB,EADvD;YAEI,GAAG,EAAC;UAFR;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAOI;UAAK,SAAS,EAAC,UAAf;UAAA,uBACI;YAAA,UAAKH;UAAL;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAPJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAhCJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAFR,iBADJ;AAkDH;;GA7DuBH,Q;;KAAAA,Q;AA+DxB,MAAMe,SAAS,GAAGjB,MAAM,CAACkB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BA;MAAMD,S"},"metadata":{},"sourceType":"module"}