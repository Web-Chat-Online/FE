{"ast":null,"code":"var _jsxFileName = \"E:\\\\chat-app\\\\public\\\\src\\\\components\\\\ChatContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ChatInput from \"./ChatInput\";\nimport Logout from \"./Logout\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport { sendMessageRoute, recieveMessageRoute } from \"../utils/APIRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatContainer(_ref) {\n  _s();\n\n  let {\n    currentChat,\n    socket\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const scrollRef = useRef();\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  useEffect(async () => {\n    const data = await JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY));\n    const response = await axios.post(recieveMessageRoute, {\n      from: data._id,\n      to: currentChat._id\n    });\n    setMessages(response.data);\n  }, [currentChat]);\n  useEffect(() => {\n    const getCurrentChat = async () => {\n      if (currentChat) {\n        await JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY))._id;\n      }\n    };\n\n    getCurrentChat();\n  }, [currentChat]);\n\n  const handleSendMsg = async msg => {\n    const data = await JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY));\n    socket.current.emit(\"send-msg\", {\n      to: currentChat._id,\n      from: data._id,\n      msg\n    });\n    await axios.post(sendMessageRoute, {\n      from: data._id,\n      to: currentChat._id,\n      message: msg\n    });\n    const msgs = [...messages];\n    msgs.push({\n      fromSelf: true,\n      message: msg\n    });\n    setMessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieve\", msg => {\n        setArrivalMessage({\n          fromSelf: false,\n          message: msg\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/svg+xml;base64,${currentChat.avatarImage}`,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: currentChat.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map(message => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: scrollRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.fromSelf ? \"sended\" : \"recieved\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content \",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: message.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      handleSendMsg: handleSendMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatContainer, \"G0lk13xrHgkwZ5K6rUm11zKbNKM=\");\n\n_c = ChatContainer;\nconst Container = styled.div`\n    display: grid;\n    grid-template-rows: 10% 80% 10%;\n    gap: 0.1rem;\n    overflow: hidden;\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n        grid-template-rows: 15% 70% 15%;\n    }\n    .chat-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0 2rem;\n        .user-details {\n            display: flex;\n            align-items: center;\n            gap: 1rem;\n            .avatar {\n                img {\n                    height: 3rem;\n                }\n            }\n            .username {\n                h3 {\n                    color: white;\n                }\n            }\n        }\n    }\n    .chat-messages {\n        padding: 1rem 2rem;\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n        overflow: auto;\n        &::-webkit-scrollbar {\n            width: 0.2rem;\n            &-thumb {\n                background-color: #ffffff39;\n                width: 0.1rem;\n                border-radius: 1rem;\n            }\n        }\n        .message {\n            display: flex;\n            align-items: center;\n            .content {\n                max-width: 40%;\n                overflow-wrap: break-word;\n                padding: 1rem;\n                font-size: 1.1rem;\n                border-radius: 1rem;\n                color: #d1d1d1;\n                @media screen and (min-width: 720px) and (max-width: 1080px) {\n                    max-width: 70%;\n                }\n            }\n        }\n        .sended {\n            justify-content: flex-end;\n            .content {\n                background-color: #4f04ff21;\n            }\n        }\n        .recieved {\n            justify-content: flex-start;\n            .content {\n                background-color: #9900ff20;\n            }\n        }\n    }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","ChatInput","Logout","v4","uuidv4","axios","sendMessageRoute","recieveMessageRoute","ChatContainer","currentChat","socket","messages","setMessages","scrollRef","arrivalMessage","setArrivalMessage","data","JSON","parse","localStorage","getItem","process","env","REACT_APP_LOCALHOST_KEY","response","post","from","_id","to","getCurrentChat","handleSendMsg","msg","current","emit","message","msgs","push","fromSelf","on","prev","scrollIntoView","behavior","avatarImage","username","map","Container","div"],"sources":["E:/chat-app/public/src/components/ChatContainer.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport Logout from \"./Logout\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nimport { sendMessageRoute, recieveMessageRoute } from \"../utils/APIRoutes\";\r\n\r\nexport default function ChatContainer({ currentChat, socket }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const scrollRef = useRef();\r\n    const [arrivalMessage, setArrivalMessage] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        const data = await JSON.parse(\r\n            localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\r\n        );\r\n        const response = await axios.post(recieveMessageRoute, {\r\n            from: data._id,\r\n            to: currentChat._id,\r\n        });\r\n        setMessages(response.data);\r\n    }, [currentChat]);\r\n\r\n    useEffect(() => {\r\n        const getCurrentChat = async () => {\r\n            if (currentChat) {\r\n                await JSON.parse(\r\n                    localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\r\n                )._id;\r\n            }\r\n        };\r\n        getCurrentChat();\r\n    }, [currentChat]);\r\n\r\n    const handleSendMsg = async (msg) => {\r\n        const data = await JSON.parse(\r\n            localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\r\n        );\r\n        socket.current.emit(\"send-msg\", {\r\n            to: currentChat._id,\r\n            from: data._id,\r\n            msg,\r\n        });\r\n        await axios.post(sendMessageRoute, {\r\n            from: data._id,\r\n            to: currentChat._id,\r\n            message: msg,\r\n        });\r\n\r\n        const msgs = [...messages];\r\n        msgs.push({ fromSelf: true, message: msg });\r\n        setMessages(msgs);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (socket.current) {\r\n            socket.current.on(\"msg-recieve\", (msg) => {\r\n                setArrivalMessage({ fromSelf: false, message: msg });\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        arrivalMessage && setMessages((prev) => [...prev, arrivalMessage]);\r\n    }, [arrivalMessage]);\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"chat-header\">\r\n                <div className=\"user-details\">\r\n                    <div className=\"avatar\">\r\n                        <img\r\n                            src={`data:image/svg+xml;base64,${currentChat.avatarImage}`}\r\n                            alt=\"\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"username\">\r\n                        <h3>{currentChat.username}</h3>\r\n                    </div>\r\n                </div>\r\n                <Logout />\r\n            </div>\r\n            <div className=\"chat-messages\">\r\n                {messages.map((message) => {\r\n                    return (\r\n                        <div ref={scrollRef} key={uuidv4()}>\r\n                            <div\r\n                                className={`message ${\r\n                                    message.fromSelf ? \"sended\" : \"recieved\"\r\n                                }`}\r\n                            >\r\n                                <div className=\"content \">\r\n                                    <p>{message.message}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <ChatInput handleSendMsg={handleSendMsg} />\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 10% 80% 10%;\r\n    gap: 0.1rem;\r\n    overflow: hidden;\r\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n        grid-template-rows: 15% 70% 15%;\r\n    }\r\n    .chat-header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 0 2rem;\r\n        .user-details {\r\n            display: flex;\r\n            align-items: center;\r\n            gap: 1rem;\r\n            .avatar {\r\n                img {\r\n                    height: 3rem;\r\n                }\r\n            }\r\n            .username {\r\n                h3 {\r\n                    color: white;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .chat-messages {\r\n        padding: 1rem 2rem;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 1rem;\r\n        overflow: auto;\r\n        &::-webkit-scrollbar {\r\n            width: 0.2rem;\r\n            &-thumb {\r\n                background-color: #ffffff39;\r\n                width: 0.1rem;\r\n                border-radius: 1rem;\r\n            }\r\n        }\r\n        .message {\r\n            display: flex;\r\n            align-items: center;\r\n            .content {\r\n                max-width: 40%;\r\n                overflow-wrap: break-word;\r\n                padding: 1rem;\r\n                font-size: 1.1rem;\r\n                border-radius: 1rem;\r\n                color: #d1d1d1;\r\n                @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n                    max-width: 70%;\r\n                }\r\n            }\r\n        }\r\n        .sended {\r\n            justify-content: flex-end;\r\n            .content {\r\n                background-color: #4f04ff21;\r\n            }\r\n        }\r\n        .recieved {\r\n            justify-content: flex-start;\r\n            .content {\r\n                background-color: #9900ff20;\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}