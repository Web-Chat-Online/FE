{"ast":null,"code":"var _jsxFileName = \"E:\\\\chat-app\\\\public\\\\src\\\\pages\\\\Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { allUsersRoute, host } from \"../utils/APIRoutes\";\nimport Contacts from \"../components/Contacts\";\nimport Welcome from \"../components/Welcome\";\nimport ChatContainer from \"../components/ChatContainer\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const socket = useRef();\n  const navigate = useNavigate();\n  const [contacts, setContacts] = useState([]);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [currentChat, setCurrentChat] = useState(undefined);\n  const [isLoaded, setLoaded] = useState(false);\n\n  const GetCurrentUser = async () => {\n    if (!localStorage.getItem(\"chat-app-user\")) {\n      navigate(\"/login\");\n    } else {\n      setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")));\n      setLoaded(true);\n    }\n  };\n\n  useEffect(() => {\n    GetCurrentUser();\n  }, []);\n  useEffect(() => {\n    if (currentUser) {\n      socket.current = io(host);\n      socket.current.emit(\"add-user\", currentUser._id);\n    }\n  }, [currentUser]);\n\n  const LoadingData = async () => {\n    if (currentUser) {\n      if (currentUser.isAvatarImageSet) {\n        const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\n        setContacts(data.data);\n      } else {\n        navigate(\"/setAvatar\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    LoadingData();\n  }, [currentUser]);\n\n  const handleChatChange = chat => {\n    setCurrentChat(chat);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Contacts, {\n          contacts: contacts,\n          currentUser: currentUser,\n          changeChat: handleChatChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), isLoaded && currentChat === undefined ? /*#__PURE__*/_jsxDEV(Welcome, {\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(ChatContainer, {\n          currentChat: currentChat,\n          currentUser: currentUser,\n          socket: socket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Chat, \"GkNCF/FcYtbt/Vs3n5qTYg5v1yM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Chat;\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 1rem;\n    align-items: center;\n    background-color: #131324;\n    .container {\n        height: 85vh;\n        width: 85vw;\n        background-color: #00000076;\n        display: grid;\n        grid-template-columns: 25% 75%;\n        @media screen and (min-width: 720px) and (max-width: 1080px) {\n            grid-template-columns: 35% 65%;\n        }\n    }\n`;\n_c2 = Container;\nexport default Chat;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","axios","useNavigate","allUsersRoute","host","Contacts","Welcome","ChatContainer","io","Chat","socket","navigate","contacts","setContacts","currentUser","setCurrentUser","undefined","currentChat","setCurrentChat","isLoaded","setLoaded","GetCurrentUser","localStorage","getItem","JSON","parse","current","emit","_id","LoadingData","isAvatarImageSet","data","get","handleChatChange","chat","Container","div"],"sources":["E:/chat-app/public/src/pages/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { allUsersRoute, host } from \"../utils/APIRoutes\";\r\nimport Contacts from \"../components/Contacts\";\r\nimport Welcome from \"../components/Welcome\";\r\nimport ChatContainer from \"../components/ChatContainer\";\r\nimport { io } from \"socket.io-client\";\r\nfunction Chat() {\r\n    const socket = useRef();\r\n    const navigate = useNavigate();\r\n    const [contacts, setContacts] = useState([]);\r\n    const [currentUser, setCurrentUser] = useState(undefined);\r\n    const [currentChat, setCurrentChat] = useState(undefined);\r\n    const [isLoaded, setLoaded] = useState(false);\r\n    const GetCurrentUser = async () => {\r\n        if (!localStorage.getItem(\"chat-app-user\")) {\r\n            navigate(\"/login\");\r\n        } else {\r\n            setCurrentUser(\r\n                await JSON.parse(localStorage.getItem(\"chat-app-user\"))\r\n            );\r\n            setLoaded(true);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        GetCurrentUser();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            socket.current = io(host);\r\n            socket.current.emit(\"add-user\", currentUser._id);\r\n        }\r\n    }, [currentUser]);\r\n\r\n    const LoadingData = async () => {\r\n        if (currentUser) {\r\n            if (currentUser.isAvatarImageSet) {\r\n                const data = await axios.get(\r\n                    `${allUsersRoute}/${currentUser._id}`\r\n                );\r\n                setContacts(data.data);\r\n            } else {\r\n                navigate(\"/setAvatar\");\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        LoadingData();\r\n    }, [currentUser]);\r\n    const handleChatChange = (chat) => {\r\n        setCurrentChat(chat);\r\n    };\r\n    return (\r\n        <>\r\n            <Container>\r\n                <div className=\"container\">\r\n                    <Contacts\r\n                        contacts={contacts}\r\n                        currentUser={currentUser}\r\n                        changeChat={handleChatChange}\r\n                    />\r\n                    {isLoaded && currentChat === undefined ? (\r\n                        <Welcome currentUser={currentUser} />\r\n                    ) : (\r\n                        <ChatContainer\r\n                            currentChat={currentChat}\r\n                            currentUser={currentUser}\r\n                            socket={socket}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    gap: 1rem;\r\n    align-items: center;\r\n    background-color: #131324;\r\n    .container {\r\n        height: 85vh;\r\n        width: 85vw;\r\n        background-color: #00000076;\r\n        display: grid;\r\n        grid-template-columns: 25% 75%;\r\n        @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n            grid-template-columns: 35% 65%;\r\n        }\r\n    }\r\n`;\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}