{"ast":null,"code":"var _jsxFileName = \"E:\\\\chat-app\\\\public\\\\src\\\\components\\\\Chatinput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Picker from \"emoji-picker-react\";\nimport { IoMdSend } from \"react-icons/io\";\nimport { BsEmojiSmileFill } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chatinput(_ref) {\n  _s();\n\n  let {\n    handleSendMsg\n  } = _ref;\n  const [msg, setMsg] = useState(\"\");\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n\n  const handleEmojiPickerhideShow = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n\n  const handleEmojiClick = (event, emojiObject) => {\n    let message = msg;\n    message += emojiObject.emoji;\n    setMsg(message);\n  };\n\n  const sendChat = e => {\n    e.preventDefault();\n\n    if (msg.length > 0) {\n      handleSendMsg(msg);\n      setMsg(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji\",\n          children: [/*#__PURE__*/_jsxDEV(BsEmojiSmileFill, {\n            onClick: handleEmojiPickerhideShow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(Picker, {\n            onEmojiClick: handleEmojiClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"input-container\",\n        onSubmit: event => sendChat(event),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"type your message here\",\n          value: msg,\n          onChange: e => setMsg(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(IoMdSend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Chatinput, \"BEbOaGFGj4PENMmZ+3rZXgHEfFI=\");\n\n_c = Chatinput;\nconst Container = styled.div`\n    display: grid;\n    align-items: center;\n    grid-template-columns: 5% 95%;\n    background-color: #080420;\n    padding: 0 2rem;\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n        padding: 0 1rem;\n        gap: 1rem;\n    }\n    .button-container {\n        display: flex;\n        align-items: center;\n        color: white;\n        gap: 1rem;\n        .emoji {\n            position: relative;\n            svg {\n                font-size: 1.5rem;\n                color: #ffff00c8;\n                cursor: pointer;\n            }\n            .emoji-picker-react {\n                position: absolute;\n                top: -350px;\n                background-color: #080420;\n                box-shadow: 0 5px 10px #9a86f3;\n                border-color: #9a86f3;\n                .emoji-scroll-wrapper::-webkit-scrollbar {\n                    background-color: #080420;\n                    width: 5px;\n                    &-thumb {\n                        background-color: #9a86f3;\n                    }\n                }\n                .emoji-categories {\n                    button {\n                        filter: contrast(0);\n                    }\n                }\n                .emoji-search {\n                    background-color: transparent;\n                    border-color: #9a86f3;\n                }\n                .emoji-group:before {\n                    background-color: #080420;\n                }\n            }\n        }\n    }\n    .input-container {\n        width: 100%;\n        border-radius: 2rem;\n        display: flex;\n        align-items: center;\n        gap: 2rem;\n        background-color: #ffffff34;\n        input {\n            width: 90%;\n            height: 60%;\n            background-color: transparent;\n            color: white;\n            border: none;\n            padding-left: 1rem;\n            font-size: 1.2rem;\n            &::selection {\n                background-color: #9a86f3;\n            }\n            &:focus {\n                outline: none;\n            }\n        }\n        button {\n            padding: 0.3rem 2rem;\n            border-radius: 2rem;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            background-color: #9a86f3;\n            border: none;\n            @media screen and (min-width: 720px) and (max-width: 1080px) {\n                padding: 0.3rem 1rem;\n                svg {\n                    font-size: 1rem;\n                }\n            }\n            svg {\n                font-size: 2rem;\n                color: white;\n            }\n        }\n    }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chatinput\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","styled","Picker","IoMdSend","BsEmojiSmileFill","Chatinput","handleSendMsg","msg","setMsg","showEmojiPicker","setShowEmojiPicker","handleEmojiPickerhideShow","handleEmojiClick","event","emojiObject","message","emoji","sendChat","e","preventDefault","length","target","value","Container","div"],"sources":["E:/chat-app/public/src/components/Chatinput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport { BsEmojiSmileFill } from \"react-icons/bs\";\r\nexport default function Chatinput({ handleSendMsg }) {\r\n    const [msg, setMsg] = useState(\"\");\r\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n    const handleEmojiPickerhideShow = () => {\r\n        setShowEmojiPicker(!showEmojiPicker);\r\n    };\r\n\r\n    const handleEmojiClick = (event, emojiObject) => {\r\n        let message = msg;\r\n        message += emojiObject.emoji;\r\n        setMsg(message);\r\n    };\r\n    const sendChat = (e) => {\r\n        e.preventDefault();\r\n        if (msg.length > 0) {\r\n            handleSendMsg(msg);\r\n            setMsg(\"\");\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Container>\r\n                <div className=\"button-container\">\r\n                    <div className=\"emoji\">\r\n                        <BsEmojiSmileFill onClick={handleEmojiPickerhideShow} />\r\n                        {showEmojiPicker && (\r\n                            <Picker onEmojiClick={handleEmojiClick} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <form\r\n                    className=\"input-container\"\r\n                    onSubmit={(event) => sendChat(event)}\r\n                >\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"type your message here\"\r\n                        value={msg}\r\n                        onChange={(e) => setMsg(e.target.value)}\r\n                    />\r\n                    <button className=\"submit\">\r\n                        <IoMdSend />\r\n                    </button>\r\n                </form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: grid;\r\n    align-items: center;\r\n    grid-template-columns: 5% 95%;\r\n    background-color: #080420;\r\n    padding: 0 2rem;\r\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n        padding: 0 1rem;\r\n        gap: 1rem;\r\n    }\r\n    .button-container {\r\n        display: flex;\r\n        align-items: center;\r\n        color: white;\r\n        gap: 1rem;\r\n        .emoji {\r\n            position: relative;\r\n            svg {\r\n                font-size: 1.5rem;\r\n                color: #ffff00c8;\r\n                cursor: pointer;\r\n            }\r\n            .emoji-picker-react {\r\n                position: absolute;\r\n                top: -350px;\r\n                background-color: #080420;\r\n                box-shadow: 0 5px 10px #9a86f3;\r\n                border-color: #9a86f3;\r\n                .emoji-scroll-wrapper::-webkit-scrollbar {\r\n                    background-color: #080420;\r\n                    width: 5px;\r\n                    &-thumb {\r\n                        background-color: #9a86f3;\r\n                    }\r\n                }\r\n                .emoji-categories {\r\n                    button {\r\n                        filter: contrast(0);\r\n                    }\r\n                }\r\n                .emoji-search {\r\n                    background-color: transparent;\r\n                    border-color: #9a86f3;\r\n                }\r\n                .emoji-group:before {\r\n                    background-color: #080420;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .input-container {\r\n        width: 100%;\r\n        border-radius: 2rem;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 2rem;\r\n        background-color: #ffffff34;\r\n        input {\r\n            width: 90%;\r\n            height: 60%;\r\n            background-color: transparent;\r\n            color: white;\r\n            border: none;\r\n            padding-left: 1rem;\r\n            font-size: 1.2rem;\r\n            &::selection {\r\n                background-color: #9a86f3;\r\n            }\r\n            &:focus {\r\n                outline: none;\r\n            }\r\n        }\r\n        button {\r\n            padding: 0.3rem 2rem;\r\n            border-radius: 2rem;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            background-color: #9a86f3;\r\n            border: none;\r\n            @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n                padding: 0.3rem 1rem;\r\n                svg {\r\n                    font-size: 1rem;\r\n                }\r\n            }\r\n            svg {\r\n                font-size: 2rem;\r\n                color: white;\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;;;AACA,eAAe,SAASC,SAAT,OAAsC;EAAA;;EAAA,IAAnB;IAAEC;EAAF,CAAmB;EACjD,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;EACA,MAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;;EACA,MAAMW,yBAAyB,GAAG,MAAM;IACpCD,kBAAkB,CAAC,CAACD,eAAF,CAAlB;EACH,CAFD;;EAIA,MAAMG,gBAAgB,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;IAC7C,IAAIC,OAAO,GAAGR,GAAd;IACAQ,OAAO,IAAID,WAAW,CAACE,KAAvB;IACAR,MAAM,CAACO,OAAD,CAAN;EACH,CAJD;;EAKA,MAAME,QAAQ,GAAIC,CAAD,IAAO;IACpBA,CAAC,CAACC,cAAF;;IACA,IAAIZ,GAAG,CAACa,MAAJ,GAAa,CAAjB,EAAoB;MAChBd,aAAa,CAACC,GAAD,CAAb;MACAC,MAAM,CAAC,EAAD,CAAN;IACH;EACJ,CAND;;EAOA,oBACI;IAAA,uBACI,QAAC,SAAD;MAAA,wBACI;QAAK,SAAS,EAAC,kBAAf;QAAA,uBACI;UAAK,SAAS,EAAC,OAAf;UAAA,wBACI,QAAC,gBAAD;YAAkB,OAAO,EAAEG;UAA3B;YAAA;YAAA;YAAA;UAAA,QADJ,EAEKF,eAAe,iBACZ,QAAC,MAAD;YAAQ,YAAY,EAAEG;UAAtB;YAAA;YAAA;YAAA;UAAA,QAHR;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QACI,SAAS,EAAC,iBADd;QAEI,QAAQ,EAAGC,KAAD,IAAWI,QAAQ,CAACJ,KAAD,CAFjC;QAAA,wBAII;UACI,IAAI,EAAC,MADT;UAEI,WAAW,EAAC,wBAFhB;UAGI,KAAK,EAAEN,GAHX;UAII,QAAQ,EAAGW,CAAD,IAAOV,MAAM,CAACU,CAAC,CAACG,MAAF,CAASC,KAAV;QAJ3B;UAAA;UAAA;UAAA;QAAA,QAJJ,eAUI;UAAQ,SAAS,EAAC,QAAlB;UAAA,uBACI,QAAC,QAAD;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAVJ;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AA4BH;;GA/CuBjB,S;;KAAAA,S;AAiDxB,MAAMkB,SAAS,GAAGtB,MAAM,CAACuB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5FA;MAAMD,S"},"metadata":{},"sourceType":"module"}